grafana:
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations: 
      kubernetes.io/ingress.allow-http: "false"
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/router.middlewares: prometheus-stripprefix@kubernetescrd
      ingress.kubernetes.io/ssl-redirect: "false"
      cert-manager.io/issuer: prod-issuer
      cert-manager.io/issuer-kind: OriginIssuer
      cert-manager.io/issuer-group: cert-manager.k8s.cloudflare.com
    hosts:
      - kube.minhviet.cc

    ## Path for grafana ingress
    path: /grafana
    pathType: Prefix
    ## TLS is issued automatically
    tls:
      - secretName: grafana-tls
        hosts:
          - kube.minhviet.cc

  service:
    type: LoadBalancer
    port: 8033
    targetPort: 3000

  grafana.ini:
    server:
      root_url: /grafana

  sidecar:
    datasources:
      enabled: true
      defaultDatasourceEnabled: true
      isDefaultDatasource: true
      timeout: 30
      defaultDatasourceScrapeInterval: 15s

  admin:
    existingSecret: grafana-auth-secret
    userKey: admin-user
    passwordKey: admin-password

  persistence:
    enabled: true
    type: sts
    accessModes:
      - ReadWriteOnce
    size: 5Gi
    finalizers:
      - kubernetes.io/pvc-protection

prometheus:
  service:
    type: LoadBalancer

  ingress:
    enabled: true
    ingressClassName: traefik
    annotations: 
      kubernetes.io/ingress.allow-http: "false"
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/router.middlewares: prometheus-stripprefix@kubernetescrd
      ingress.kubernetes.io/ssl-redirect: "false"
      cert-manager.io/issuer: prod-issuer
      cert-manager.io/issuer-kind: OriginIssuer
      cert-manager.io/issuer-group: cert-manager.k8s.cloudflare.com

    hosts:
      - kube.minhviet.cc

    paths:
      - /prometheus
    pathType: Prefix

    tls:
      - secretName: prometheus-tls
        hosts:
          - kube.minhviet.cc

  prometheusSpec:
    scrapeInterval: 15s
    scrapeTimeout: 30s
    externalUrl: /prometheus

additionalPrometheusRulesMap:
  devops-efrei:
    groups:
      - name: devops
        rules:
        # alert when there are less than 2 pods for 30s
        - alert: InsufficientDevPods
          expr: kube_deployment_status_replicas_ready{namespace="devops-dev", deployment="java-deployment"} < 2
          for: 30s
          labels:
            severity: page
          annotations:
            summary: Insufficient pods in dev
        - alert: InsufficientProdPods
          expr: kube_deployment_status_replicas_ready{namespace="devops-prod", deployment="java-deployment"} < 2
          for: 30s
          labels:
            severity: page
          annotations:
            summary: Insufficient pods in prod


alertmanager:
  config:
    global:
      smtp_smarthost: 'smtp.gmail.com:587'
      smtp_from: 'nexus.devops.efrei@gmail.com'
      smtp_auth_username: 'nexus.devops.efrei@gmail.com'
      smtp_auth_password_file: /etc/alertmanager/secrets/alertmanager-config-secret/email_token
    route:
      group_by: ['alertname']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 3h
      routes:
      - matchers:
        - namespace = "devops-dev"
        receiver: 'email-dev'
      - matchers:
        - namespace = "devops-prod"
        receiver: 'email-prod'
      - receiver: 'null'
        matchers:
          - alertname = "Watchdog"
    receivers:
      - name: 'email-dev'
        email_configs:
        - to: 'nexus.devops.efrei@gmail.com'
      - name: 'email-prod'
        email_configs:
        - to: 'nexus.devops.efrei@gmail.com'
          headers:
            Subject: 'InsufficientPods Alert From NEXUS Team'
        - to: 'quang-viet.nguyen@efrei.net'
          headers:
            Subject: 'InsufficientPods Alert From NEXUS Team'
        - to: 'senhao.jiang@efrei.net'
          headers:
            Subject: 'InsufficientPods Alert From NEXUS Team'
        - to: 'zain.zafar@efrei.net'
          headers:
            Subject: 'InsufficientPods Alert From NEXUS Team'
        - to: 'kerim-serdarovitch.hudayberdiyev@efrei.net'
          headers:
            Subject: 'InsufficientPods Alert From NEXUS Team'
        - to: 'mohamet.dia@intervenants.efrei.net'
          headers:
            Subject: 'InsufficientPods Alert From NEXUS Team'
      - name: 'null'
  alertmanagerSpec:
    secrets:
      - alertmanager-config-secret

  service:
    type: LoadBalancer
  
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations: 
      kubernetes.io/ingress.allow-http: "false"
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/router.middlewares: prometheus-stripprefix@kubernetescrd
      ingress.kubernetes.io/ssl-redirect: "false"
      cert-manager.io/issuer: prod-issuer
      cert-manager.io/issuer-kind: OriginIssuer
      cert-manager.io/issuer-group: cert-manager.k8s.cloudflare.com

    hosts:
      - kube.minhviet.cc

    paths:
      - /alertmanager
    pathType: Prefix

    tls:
      - secretName: prometheus-tls
        hosts:
          - kube.minhviet.cc
